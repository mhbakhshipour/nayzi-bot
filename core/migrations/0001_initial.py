# Generated by Django 3.0.7 on 2020-07-01 08:47

import core.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('telegram_id', models.CharField(blank=True, max_length=20, null=True, unique=True, verbose_name='telegram_id')),
                ('username', models.CharField(blank=True, max_length=255, null=True, unique=True, verbose_name='username')),
                ('mobile', models.CharField(blank=True, max_length=11, null=True, verbose_name='mobile')),
                ('name', models.CharField(blank=True, max_length=100, null=True, verbose_name='name')),
                ('city', models.CharField(blank=True, max_length=100, null=True, verbose_name='city')),
                ('age', models.SmallIntegerField(blank=True, null=True, verbose_name='age')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='date joined')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('is_staff', models.BooleanField(default=False, verbose_name='staff status')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'db_table': 'users',
            },
            managers=[
                ('objects', core.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, unique=True, verbose_name='title')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
            ],
            options={
                'verbose_name': 'service',
                'verbose_name_plural': 'services',
                'db_table': 'services',
            },
        ),
        migrations.CreateModel(
            name='ServiceSticker',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='service_sticker', verbose_name='image')),
                ('description', models.TextField(verbose_name='description')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
            ],
            options={
                'verbose_name': 'service_sticker',
                'verbose_name_plural': 'service_stickers',
                'db_table': 'service_stickers',
            },
        ),
        migrations.CreateModel(
            name='UserActivity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('get_contact_us', 'get_contact_us'), ('choice_service_uncompleted', 'choice_service_uncompleted'), ('choice_service_completed', 'choice_service_completed'), ('send_information', 'send_information')], max_length=255, verbose_name='action')),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='created_at')),
                ('services', models.ManyToManyField(related_name='user_services', to='core.Service', verbose_name='services')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'verbose_name': 'user_activity',
                'verbose_name_plural': 'user_activities',
                'db_table': 'user_activities',
            },
        ),
        migrations.AddField(
            model_name='service',
            name='images',
            field=models.ManyToManyField(blank=True, related_name='service_sticker', to='core.ServiceSticker', verbose_name='images'),
        ),
    ]
